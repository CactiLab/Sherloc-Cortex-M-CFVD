
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 5
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 6; 
const uint32_t ibranch_count = 5; 
const uint32_t dbranch_count = 272;
const uint32_t dcall_count = 315; 
const uint32_t ret_count = 117; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b, 0x77a0cf0, 0x83e0cf0, 0x8500cf0, 0x2646004b };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004c4, 0x2004c6, 0x200514 };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x2004be, 0x2004c4, 0x2004c6, 0x20099c };

const uint32_t icall_list[] = { 0x20077a, 0x2007a6, 0x2007c0, 0x20083e, 0x200850, 0x20086a };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x200486, 0x200492, 0x200536, 0x20055c, 0x2005be, 0x2005ce, 0x2005d2, 0x2005de, 0x2005e2, 0x2005ea, 0x2005fa, 0x200606, 0x20061a, 0x200626, 0x20062a, 0x200636, 0x200646, 0x200652, 0x20065e, 0x200666, 0x20067e, 0x20068a, 0x20068e, 0x20069e, 0x2006a2, 0x2006b2, 0x2006b6, 0x2006be, 0x2006d2, 0x2006d6, 0x2006e6, 0x2006ee, 0x2006fe, 0x20070a, 0x20070e, 0x200716, 0x20075c, 0x200768, 0x200786, 0x20079e, 0x2007b8, 0x2007ca, 0x2007da, 0x2007e6, 0x2007ee, 0x2007fa, 0x20080e, 0x200828, 0x200862, 0x200874, 0x20087c, 0x20088c, 0x200894, 0x20089c, 0x2008a4, 0x2008b0, 0x20095e, 0x200970, 0x200978, 0x20097c, 0x200992, 0x200a7a, 0x200a82, 0x200a9a, 0x200ac4, 0x200ad8, 0x200ae0, 0x200ae8, 0x200b00, 0x200b14, 0x200b1c, 0x200b3e, 0x200b46, 0x200b5a, 0x200b62, 0x200b7e, 0x200b92, 0x200b9e, 0x200bb4, 0x200bc0, 0x200bd6, 0x200be2, 0x200bf6, 0x200c02, 0x200c0e, 0x200c14, 0x200c20, 0x200c3c, 0x200c48, 0x200c64, 0x200c7c, 0x200d1c, 0x200d20, 0x200d2e, 0x200d3c, 0x200d62, 0x200d6a, 0x200d7c, 0x200d84, 0x200d90, 0x200d98, 0x200e1c, 0x200e24, 0x200e48, 0x200e50, 0x200e8c, 0x200eb8, 0x200ed4, 0x200ed8, 0x200ede, 0x200eee, 0x200efa, 0x200f0e, 0x200f1e, 0x200f3e, 0x200f46, 0x200f58, 0x200f6c, 0x200f82, 0x200f8e, 0x200f9a, 0x200fb0, 0x200fc4, 0x200fcc, 0x200fd4, 0x200fdc, 0x200fe4, 0x201008, 0x20101c, 0x201024, 0x201030, 0x201038, 0x201060, 0x201070, 0x201078, 0x201154, 0x201168, 0x20116c, 0x201174, 0x20118e, 0x2011cc, 0x2011f6, 0x20120e, 0x20121a, 0x20122a, 0x201232, 0x201244, 0x201250, 0x201260, 0x201268, 0x201280, 0x20128c, 0x201294, 0x20129c, 0x2012ac, 0x2012b4, 0x2012d0, 0x2012e0, 0x2012ea, 0x2012fa, 0x20130e, 0x20132c, 0x201338, 0x20134e, 0x20135a, 0x201364, 0x20137c, 0x201384, 0x201396, 0x2013a6, 0x2013ae, 0x2013b6, 0x2013be, 0x2013c6, 0x2013d6, 0x2013de, 0x2013ec, 0x2013f4, 0x2013fc, 0x201404, 0x201414, 0x201424, 0x20142c, 0x201434, 0x20143c, 0x20144c, 0x201454, 0x201462, 0x20146a, 0x201472, 0x201506, 0x20150a, 0x201518, 0x201526, 0x201540, 0x201548, 0x20155e, 0x20156e, 0x201578, 0x201580, 0x2015b4, 0x201606, 0x201682, 0x201696, 0x2016a8, 0x2016b0, 0x2016bc, 0x2016d0, 0x2016e2, 0x2016ea, 0x201706, 0x201716, 0x201722, 0x201726, 0x20172c, 0x201738, 0x201740, 0x201750, 0x20176c, 0x2017a2, 0x2017b2, 0x2017c2, 0x2017ca, 0x2017de, 0x2017e6, 0x201806, 0x2018c6, 0x2018d0, 0x2018dc, 0x2018e6, 0x2018f2, 0x2018fc, 0x201908, 0x201918, 0x201920, 0x201928, 0x201940, 0x201948, 0x201950, 0x201958, 0x201964, 0x20197c, 0x201984, 0x20199c, 0x2019a4, 0x2019ba, 0x201a84, 0x201aac, 0x201ac2, 0x201ace, 0x201ae2, 0x201af2, 0x201afa, 0x201b0e, 0x201b24, 0x201b2c, 0x201b64, 0x201b78, 0x201b88, 0x201b90, 0x201bf0, 0x201c0a, 0x201c32, 0x201c3e, 0x201c46, 0x201c52, 0x201c62, 0x201c6e, 0x201c76, 0x201c82, 0x201c92, 0x201c9e, 0x201ca6, 0x201cb2, 0x201ce8, 0x201cf0, 0x201d08, 0x201d1c, 0x201d32, 0x201d4c, 0x201d5c, 0x201d70, 0x201d78, 0x201d80, 0x201d88, 0x201d90, 0x201d9c, 0x201db6, 0x201dbe, 0x201dc6, 0x201dd2, 0x201e02, 0x201e2a, 0x201e46, 0x201e66, 0x201e86, 0x20200c, 0x20222a, 0x202260, 0x202348, 0x2023ac, 0x202474, 0x2025a0, 0x202888, 0x202a66, 0x202aa8 };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x20048c, 0x200498, 0x20049e, 0x2004b6, 0x200a16, 0x200a5e, 0x200a90, 0x200c76, 0x200d26, 0x200d34, 0x200d68, 0x200d70, 0x200d8e, 0x200da2, 0x200e0a, 0x20120a, 0x2012c2, 0x201510, 0x20151e, 0x201552, 0x201564, 0x201574, 0x20158a, 0x201618, 0x201656, 0x201a9e, 0x201b3c, 0x201c28, 0x201cbe, 0x201cfe, 0x201daa, 0x201e0a, 0x201e32, 0x201e4e, 0x201e6e, 0x201e8e, 0x201eae, 0x201eb4, 0x201eba, 0x201ec0, 0x201ec6, 0x201f50, 0x201f5c, 0x201f74, 0x201fe4, 0x202004, 0x20202e, 0x20214c, 0x202160, 0x2021ea, 0x202210, 0x202244, 0x20225a, 0x202288, 0x2022fc, 0x202302, 0x202314, 0x202318, 0x20232a, 0x202330, 0x202344, 0x20238c, 0x202394, 0x2023a8, 0x2023b6, 0x2023e0, 0x2023e6, 0x202406, 0x20240c, 0x202428, 0x20242e, 0x202440, 0x202444, 0x202456, 0x20245c, 0x202470, 0x20254e, 0x202580, 0x20259e, 0x2025d2, 0x20265c, 0x202676, 0x202682, 0x20269c, 0x2026a2, 0x2026b4, 0x2026b8, 0x2026ca, 0x2026d0, 0x2026e4, 0x202802, 0x202814, 0x20287e, 0x20289a, 0x20292e, 0x202938, 0x202944, 0x2029a0, 0x2029ac, 0x2029e6, 0x2029f4, 0x202a04, 0x202a18, 0x202a2e, 0x202a3e, 0x202a48, 0x202a5e, 0x202a76, 0x202a94, 0x202b5e, 0x202b68, 0x202b7c, 0x202be2, 0x202c86 };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x2004b2, 0x2004be, 0x2004c4, 0x2004c6, 0x2004d8, 0x2004ea, 0x2004f6, 0x200502, 0x20050e, 0x20056c, 0x20057c, 0x2005bc, 0x200672, 0x200678, 0x200722, 0x200728, 0x200744, 0x2008bc, 0x2008e8, 0x200912, 0x20092a, 0x20095c, 0x200982, 0x20098c, 0x20099a, 0x20099c, 0x2009c2, 0x200a2c, 0x200a32, 0x200a34, 0x200a38, 0x200a48, 0x200a64, 0x200a70, 0x200aaa, 0x200ab0, 0x200af0, 0x200b24, 0x200b2a, 0x200b6a, 0x200bf4, 0x200c12, 0x200c84, 0x200d0c, 0x200d12, 0x200d16, 0x200d28, 0x200d4e, 0x200d52, 0x200d5e, 0x200dd0, 0x200dd6, 0x200de0, 0x200df2, 0x200e20, 0x200e34, 0x200e4c, 0x200e60, 0x200e6c, 0x200e72, 0x200ea6, 0x200f26, 0x200f2c, 0x200f4a, 0x200f5c, 0x200fa6, 0x200ff2, 0x200ffe, 0x201040, 0x201080, 0x2010a2, 0x2010f4, 0x201124, 0x20112c, 0x20112e, 0x201130, 0x201140, 0x201148, 0x20114c, 0x201150, 0x201162, 0x201178, 0x2011e8, 0x2011fa, 0x201236, 0x20127c, 0x20136e, 0x20138c, 0x2013e2, 0x201408, 0x20140a, 0x201458, 0x201476, 0x2014f6, 0x2014fc, 0x201500, 0x201512, 0x20152e, 0x201532, 0x20153e, 0x2015de, 0x201642, 0x201666, 0x201680, 0x20168c, 0x20169e, 0x2016ba, 0x2016c6, 0x2016d8, 0x2016f6, 0x2016fc, 0x201776, 0x201788, 0x2017f0, 0x2017f2, 0x2017fa, 0x201810, 0x20184c, 0x20188e, 0x201892, 0x201894, 0x201898, 0x20189c, 0x2018b0, 0x2019b2, 0x2019c8, 0x2019dc, 0x201a7a, 0x201b1a, 0x201b4c, 0x201b98, 0x201be6, 0x201c16, 0x201c1a, 0x201c1e, 0x201ce2, 0x201d42, 0x201dac, 0x201dd6, 0x201ed4, 0x201ede, 0x201f02, 0x201f16, 0x201f40, 0x201f7a, 0x201fa2, 0x201fb6, 0x201fc2, 0x201fc8, 0x201fd2, 0x201fd4, 0x201fea, 0x201ff2, 0x202044, 0x20205a, 0x20208c, 0x202134, 0x202148, 0x20215c, 0x202166, 0x202174, 0x2021ba, 0x2021c8, 0x2021da, 0x2021f6, 0x2021f8, 0x2021fe, 0x20221e, 0x202234, 0x20224a, 0x20226c, 0x202270, 0x202272, 0x202274, 0x202276, 0x202278, 0x20228a, 0x20228c, 0x202292, 0x202294, 0x2022e8, 0x2022f4, 0x202304, 0x202310, 0x20231e, 0x202324, 0x202340, 0x202358, 0x202372, 0x20239e, 0x2023b8, 0x2023ca, 0x2023f0, 0x202414, 0x202420, 0x202430, 0x20243c, 0x20244a, 0x202450, 0x20246c, 0x202484, 0x2024a0, 0x2024f2, 0x20250a, 0x20252e, 0x20254c, 0x202570, 0x202590, 0x2025a8, 0x2025ac, 0x2025b8, 0x2025be, 0x2025ca, 0x2025ea, 0x2025f6, 0x202602, 0x202604, 0x20261c, 0x202622, 0x202638, 0x202688, 0x202694, 0x2026a4, 0x2026b0, 0x2026be, 0x2026c4, 0x2026e0, 0x2026ec, 0x2026fa, 0x202702, 0x202714, 0x202730, 0x2027fc, 0x20280c, 0x20280e, 0x202848, 0x202850, 0x202858, 0x202860, 0x202868, 0x202872, 0x202874, 0x20288c, 0x2028ac, 0x2028b6, 0x2028de, 0x2028f8, 0x20291e, 0x202960, 0x202972, 0x20298a, 0x2029ae, 0x2029bc, 0x2029fe, 0x202a0e, 0x202a28, 0x202a36, 0x202a4e, 0x202a98, 0x202b28, 0x202b2a, 0x202b9a, 0x202be0, 0x202c3e, 0x202c42, 0x202c66, 0x202c78, 0x202ce4, 0x202ce8, 0x202cec };


#endif // BT_S
                