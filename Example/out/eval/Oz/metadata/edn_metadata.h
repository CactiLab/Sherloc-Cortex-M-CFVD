
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 1
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 0; 
const uint32_t ibranch_count = 1; 
const uint32_t dbranch_count = 36;
const uint32_t dcall_count = 62; 
const uint32_t ret_count = 5; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004a4, 0x2004a6, 0x2004a8 };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x20049e, 0x2004a4, 0x2004a6, 0x2008a2 };

const uint32_t icall_list[] = {  };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x2004ca, 0x2004ea, 0x200890, 0x200a86, 0x200a8a, 0x200a96, 0x200a9a, 0x200aa6, 0x200aaa, 0x200ab6, 0x200aba, 0x200ac6, 0x200aca, 0x200ad6, 0x200ada, 0x200ae6, 0x200aea, 0x200af6, 0x200afa, 0x200b06, 0x200b0a, 0x200b16, 0x200b1a, 0x200b26, 0x200b2a, 0x200b36, 0x200b3a, 0x200b46, 0x200b4a, 0x200b56, 0x200b5a, 0x200b66, 0x200b6a, 0x200b76, 0x200b7a, 0x200b86, 0x200b8a, 0x200b96, 0x200b9a, 0x200ba6, 0x200baa, 0x200bb6, 0x200bba, 0x200bc6, 0x200bca, 0x200bd6, 0x200bda, 0x200be6, 0x200bea, 0x200bf6, 0x200bfa, 0x200c06, 0x200c0a };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x200496, 0x2008ec };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x200492, 0x20049e, 0x2004a4, 0x2004a6, 0x200508, 0x20051a, 0x200526, 0x20053c, 0x200542, 0x20055a, 0x200564, 0x200574, 0x200580, 0x200588, 0x200598, 0x2005a4, 0x2005ae, 0x2005c2, 0x2005ec, 0x20060c, 0x20062a, 0x200650, 0x20066a, 0x2006a6, 0x2006fa, 0x200724, 0x200734, 0x20074e, 0x200858, 0x200872, 0x20088a, 0x2008a0, 0x2008a2, 0x2008a6 };


#endif // BT_S
                