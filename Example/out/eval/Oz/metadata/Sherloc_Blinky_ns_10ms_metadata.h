
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 35
#define NUM_HANDLER 6
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 110; 
const uint32_t ibranch_count = 35; 
const uint32_t dbranch_count = 75;
const uint32_t dcall_count = 62; 
const uint32_t ret_count = 25; 
const uint32_t handler_count = 8; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b, 0x5740ee8, 0x57a0ee8, 0x5860ee8, 0x58c0ee8, 0x5b2004b, 0x6e60634, 0x6ec0634, 0x6f80634, 0x7060634, 0x70606fc, 0x70c0634, 0x7160634, 0x8480634, 0x8480844, 0x848085c, 0x84c0634, 0x8500634, 0x88207c2, 0x90e07fc, 0x91a07fc, 0x9240ee8, 0x92a0ee8, 0x9300ee8, 0x9360ee8, 0xb060544, 0xb0e0544, 0xb160544, 0xb420544, 0xeb60e90, 0xeba0e90, 0xebe0e90, 0xefe0e90, 0xf020e90, 0xf060e90 };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004a4, 0x2005b8, 0x20072c, 0x200764, 0x2007dc, 0x2007f0 };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x20049e, 0x2004a4, 0x2005b8, 0x200dc8 };

const uint32_t icall_list[] = { 0x200574, 0x20057a, 0x200586, 0x20058c, 0x200592, 0x200598, 0x2005a6, 0x2006e6, 0x2006ec, 0x200706, 0x20070c, 0x200848, 0x20084c, 0x200850, 0x200856, 0x200882, 0x20088c, 0x200892, 0x200898, 0x2008a2, 0x2008a8, 0x2008ae, 0x2008b4, 0x2008ba, 0x2008c0, 0x2008c6, 0x2008cc, 0x2008d2, 0x2008d8, 0x20090e, 0x20091a, 0x200924, 0x20092a, 0x200930, 0x200936, 0x20093c, 0x200942, 0x200948, 0x20094e, 0x200954, 0x20095a, 0x200960, 0x200966, 0x20096c, 0x200972, 0x200978, 0x20097e, 0x200984, 0x20098a, 0x200990, 0x200996, 0x20099c, 0x2009a2, 0x2009a8, 0x2009ae, 0x2009b4, 0x2009ba, 0x2009c0, 0x2009c6, 0x2009cc, 0x2009d2, 0x2009d8, 0x2009de, 0x2009e4, 0x2009ea, 0x2009f0, 0x2009f6, 0x2009fc, 0x200a02, 0x200a08, 0x200a0e, 0x200a14, 0x200a1a, 0x200a20, 0x200a26, 0x200a2a, 0x200a30, 0x200a34, 0x200a3a, 0x200a3e, 0x200a44, 0x200a48, 0x200a4e, 0x200a54, 0x200a5a, 0x200a60, 0x200a66, 0x200a6c, 0x200a70, 0x200a76, 0x200a7c, 0x200a82, 0x200a88, 0x200a8e, 0x200a94, 0x200a9a, 0x200aa0, 0x200b06, 0x200b0e, 0x200b16, 0x200b42, 0x200b4c, 0x200b54, 0x200b5c, 0x200eb6, 0x200eba, 0x200ebe, 0x200efe, 0x200f02, 0x200f06 };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x2004ba, 0x2004c0, 0x2004c4, 0x200508, 0x200554, 0x2005c2, 0x2005c8, 0x2005cc, 0x2005d0, 0x2005de, 0x2005e2, 0x2005ee, 0x200606, 0x20060c, 0x200610, 0x20061a, 0x20061e, 0x20066c, 0x200674, 0x200692, 0x2006b0, 0x2006b8, 0x2006d0, 0x20074e, 0x2007b4, 0x2007bc, 0x2007d4, 0x20086a, 0x200874, 0x200884, 0x20089a, 0x200abc, 0x200ac2, 0x200ac6, 0x200ae2, 0x200b70, 0x200b86, 0x200ba2, 0x200c08, 0x200c44, 0x200ca0, 0x200cb6, 0x200cd4, 0x200ce6, 0x200cf0, 0x200d28, 0x200d8c, 0x200daa, 0x200dc4, 0x200eca, 0x200eec, 0x2017ac, 0x2017b0 };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x200496, 0x200536, 0x20055e, 0x2005fa, 0x200632, 0x20065c, 0x200680, 0x200690, 0x2006be, 0x2006ca, 0x200728, 0x20078a, 0x200792, 0x20079c, 0x2007c0, 0x2007d8, 0x2007ea, 0x2007f6, 0x200808, 0x200824, 0x200e9c, 0x200f36 };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x200492, 0x20049e, 0x2004a4, 0x2004b4, 0x2004ee, 0x2004f4, 0x200522, 0x20052a, 0x20054e, 0x20055c, 0x2005b8, 0x2005ba, 0x2005da, 0x2005ea, 0x2005f6, 0x2005fc, 0x200614, 0x200624, 0x20062e, 0x200640, 0x200646, 0x20064c, 0x20064e, 0x200654, 0x20065a, 0x20069c, 0x2006d8, 0x200780, 0x20078c, 0x200796, 0x200800, 0x200806, 0x200812, 0x200822, 0x200842, 0x20085a, 0x200ade, 0x200ae8, 0x200b68, 0x200b76, 0x200b7e, 0x200b8c, 0x200bda, 0x200be2, 0x200c1e, 0x200c7c, 0x200c84, 0x200ca8, 0x200cc6, 0x200cdc, 0x200cde, 0x200d00, 0x200d30, 0x200dbe, 0x200dc8, 0x200e20, 0x200e22, 0x200e8e, 0x200e98, 0x200ec0, 0x200ed4, 0x200ee4, 0x200f08, 0x201692, 0x2017aa, 0x2017b4, 0x2017b6, 0x2017b8, 0x201874, 0x201880, 0x2019ba, 0x2019da, 0x201db8 };


#endif // BT_S
                