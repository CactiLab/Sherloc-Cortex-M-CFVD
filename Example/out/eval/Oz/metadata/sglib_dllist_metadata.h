
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 9
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 2; 
const uint32_t ibranch_count = 9; 
const uint32_t dbranch_count = 64;
const uint32_t dcall_count = 13; 
const uint32_t ret_count = 6; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b, 0x6be06b4, 0x6be06ba, 0x6be06c6, 0x6be06ce, 0x6e606dc, 0x6e606e2, 0x6e606f8, 0x6e6070a };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004a4, 0x2004a6, 0x2004a8 };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x20049e, 0x2004a4, 0x2004a6, 0x20068c };

const uint32_t icall_list[] = { 0x2006be, 0x2006e6 };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x2004ca, 0x2004ea, 0x20066a, 0x200682 };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x200496, 0x200706, 0x20073a };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x200492, 0x20049e, 0x2004a4, 0x2004a6, 0x200506, 0x20051a, 0x200538, 0x200552, 0x20055e, 0x200560, 0x200572, 0x200576, 0x20057e, 0x200584, 0x20058c, 0x200594, 0x200596, 0x20059c, 0x20059e, 0x2005aa, 0x2005ac, 0x2005b2, 0x2005b4, 0x2005ba, 0x2005be, 0x2005c0, 0x2005dc, 0x2005e6, 0x2005ee, 0x2005f4, 0x2005fc, 0x200602, 0x20060c, 0x20060e, 0x200618, 0x20061a, 0x200622, 0x20062e, 0x200630, 0x20063a, 0x20063c, 0x200640, 0x20064e, 0x200658, 0x20065e, 0x200670, 0x20067c, 0x20068a, 0x20068c, 0x200692, 0x2006b2, 0x2006b8, 0x2006c0, 0x2006c4, 0x2006c6, 0x2006cc, 0x2006da, 0x2006e0, 0x2006e8, 0x2006ec, 0x2006f8, 0x20070c };


#endif // BT_S
                