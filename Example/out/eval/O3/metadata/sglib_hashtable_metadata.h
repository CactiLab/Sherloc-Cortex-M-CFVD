
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 1
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 0; 
const uint32_t ibranch_count = 1; 
const uint32_t dbranch_count = 160;
const uint32_t dcall_count = 22; 
const uint32_t ret_count = 8; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004f4, 0x2004f8, 0x2004fc };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x20049e, 0x2004f4, 0x2004f8, 0x200a38 };

const uint32_t icall_list[] = {  };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x200534, 0x20054e, 0x200952, 0x200984, 0x200994, 0x2009ac, 0x2009bc, 0x2009d4, 0x2009e4, 0x2009fc, 0x200a0c, 0x200a24, 0x200a34 };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x200496, 0x2004de, 0x2004f0, 0x20093a, 0x200a66 };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x200492, 0x20049e, 0x2004c0, 0x2004f4, 0x2004f8, 0x200578, 0x20059a, 0x2005b2, 0x2005ba, 0x2005be, 0x2005c4, 0x2005c8, 0x2005ce, 0x2005d2, 0x2005d8, 0x2005de, 0x200616, 0x20061e, 0x200624, 0x20062a, 0x200630, 0x200636, 0x20063c, 0x200642, 0x200648, 0x20064a, 0x200650, 0x20065a, 0x200660, 0x200664, 0x20066a, 0x20066e, 0x200674, 0x200678, 0x20067e, 0x200682, 0x200688, 0x200694, 0x20069a, 0x2006a0, 0x2006a8, 0x2006b6, 0x2006be, 0x2006c2, 0x2006c6, 0x2006ca, 0x2006ce, 0x2006d2, 0x2006da, 0x2006dc, 0x2006e0, 0x2006e4, 0x2006e8, 0x2006ea, 0x2006ee, 0x2006f6, 0x2006fc, 0x200702, 0x200708, 0x20070e, 0x200714, 0x20071a, 0x200720, 0x200726, 0x20072c, 0x200732, 0x200738, 0x20073e, 0x200744, 0x200754, 0x20075a, 0x200760, 0x200766, 0x20076c, 0x200772, 0x200778, 0x20077e, 0x200784, 0x20078a, 0x200790, 0x200796, 0x20079c, 0x2007a2, 0x2007a8, 0x2007ae, 0x2007b4, 0x2007ba, 0x2007c0, 0x2007c6, 0x2007cc, 0x2007d2, 0x2007d8, 0x2007de, 0x2007e4, 0x2007ea, 0x2007f0, 0x2007f6, 0x2007fc, 0x200802, 0x200808, 0x20080e, 0x200814, 0x200818, 0x20081e, 0x200822, 0x200828, 0x20082c, 0x200832, 0x200836, 0x20083c, 0x200840, 0x200846, 0x20084a, 0x200850, 0x200854, 0x20085a, 0x20085e, 0x200864, 0x200868, 0x20086e, 0x200872, 0x200878, 0x20087c, 0x200882, 0x200886, 0x20088c, 0x200890, 0x200896, 0x20089a, 0x2008a0, 0x2008a4, 0x2008aa, 0x2008ae, 0x2008b4, 0x2008b8, 0x2008be, 0x2008ce, 0x2008da, 0x2008e6, 0x2008f4, 0x200902, 0x20090a, 0x20090e, 0x200912, 0x200916, 0x20091a, 0x20091e, 0x200926, 0x200928, 0x20092c, 0x200930, 0x200934, 0x20098e, 0x2009b6, 0x2009de, 0x200a06, 0x200a2e, 0x200a38 };


#endif // BT_S
                