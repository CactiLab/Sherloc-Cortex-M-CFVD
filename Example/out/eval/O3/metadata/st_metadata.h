
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 2
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 0; 
const uint32_t ibranch_count = 2; 
const uint32_t dbranch_count = 140;
const uint32_t dcall_count = 319; 
const uint32_t ret_count = 76; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b, 0x2846004b };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004c4, 0x2004c8, 0x2004cc };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x2004be, 0x2004c4, 0x2004c8, 0x202044 };

const uint32_t icall_list[] = {  };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x200486, 0x200492, 0x200504, 0x200e4c, 0x200e54, 0x200e5c, 0x200e64, 0x200e70, 0x200e7c, 0x200e88, 0x200e94, 0x200ea0, 0x200eac, 0x200eb8, 0x200ec4, 0x200ed0, 0x200edc, 0x200ee8, 0x200ef4, 0x200f00, 0x200f0c, 0x200f18, 0x200f24, 0x200f30, 0x200f3c, 0x200f48, 0x200f54, 0x200f60, 0x200f7e, 0x200fac, 0x200fb4, 0x200fc0, 0x200fd2, 0x200fda, 0x200fe6, 0x200ff8, 0x201000, 0x20100c, 0x20101e, 0x201026, 0x201032, 0x201048, 0x201050, 0x20105c, 0x201072, 0x20107a, 0x201086, 0x20109c, 0x2010a4, 0x2010b0, 0x2010c6, 0x2010ce, 0x2010da, 0x2010f0, 0x2010f8, 0x201104, 0x20111a, 0x201122, 0x20112e, 0x201144, 0x20114c, 0x201158, 0x20116e, 0x201176, 0x201182, 0x201198, 0x2011a0, 0x2011ac, 0x2011c2, 0x2011ca, 0x2011d6, 0x2011ec, 0x2011f4, 0x201200, 0x201216, 0x20121e, 0x20122a, 0x201240, 0x201248, 0x201254, 0x20126a, 0x201272, 0x20127e, 0x201294, 0x20129c, 0x2012a8, 0x2012be, 0x2012c6, 0x2012d2, 0x2012ee, 0x2012fe, 0x20137c, 0x201384, 0x201390, 0x2013a0, 0x2013c4, 0x2013cc, 0x2013d4, 0x2013e2, 0x201406, 0x20140e, 0x201416, 0x201424, 0x201448, 0x201450, 0x201458, 0x201466, 0x20148a, 0x201492, 0x20149a, 0x2014a8, 0x2014cc, 0x2014d4, 0x2014dc, 0x2014ea, 0x20150e, 0x201516, 0x20151e, 0x20152c, 0x201550, 0x201558, 0x201560, 0x20156e, 0x201592, 0x20159a, 0x2015a2, 0x2015b0, 0x2015d4, 0x2015dc, 0x2015e4, 0x2015f8, 0x201644, 0x20164c, 0x201654, 0x20165c, 0x201668, 0x201674, 0x201680, 0x20168c, 0x201698, 0x2016a4, 0x2016b0, 0x2016bc, 0x2016c8, 0x2016d4, 0x2016e0, 0x2016ec, 0x2016f8, 0x201704, 0x201710, 0x20171c, 0x201728, 0x201734, 0x201740, 0x20174c, 0x201758, 0x201770, 0x2017a4, 0x2017ac, 0x2017b8, 0x2017ca, 0x2017d2, 0x2017de, 0x2017f0, 0x2017f8, 0x201804, 0x201816, 0x20181e, 0x20182a, 0x201840, 0x201848, 0x201854, 0x20186a, 0x201872, 0x20187e, 0x201894, 0x20189c, 0x2018a8, 0x2018be, 0x2018c6, 0x2018d2, 0x2018e8, 0x2018f0, 0x2018fc, 0x201912, 0x20191a, 0x201926, 0x20193c, 0x201944, 0x201950, 0x201966, 0x20196e, 0x20197a, 0x201990, 0x201998, 0x2019a4, 0x2019ba, 0x2019c2, 0x2019ce, 0x2019e4, 0x2019ec, 0x2019f8, 0x201a0e, 0x201a16, 0x201a22, 0x201a38, 0x201a40, 0x201a4c, 0x201a62, 0x201a6a, 0x201a76, 0x201a8c, 0x201a94, 0x201aa0, 0x201ab6, 0x201abe, 0x201aca, 0x201ae0, 0x201af0, 0x201b32, 0x201b5a, 0x201b6a, 0x201b76, 0x201b86, 0x201b92, 0x201ba8, 0x201bba, 0x201bca, 0x201bd6, 0x201be6, 0x201bf2, 0x201c06, 0x201c18, 0x201c28, 0x201c34, 0x201c44, 0x201c50, 0x201c66, 0x201c78, 0x201c88, 0x201c94, 0x201ca4, 0x201cb0, 0x201ccc, 0x201ce6, 0x201cf6, 0x201d02, 0x201d12, 0x201d1e, 0x201d38, 0x201d50, 0x201d60, 0x201d6c, 0x201d7c, 0x201d88, 0x201da8, 0x201dbe, 0x201dce, 0x201dda, 0x201dea, 0x201df6, 0x201e0e, 0x201e28, 0x201e38, 0x201e44, 0x201e54, 0x201e60, 0x201e7a, 0x201e90, 0x201ea0, 0x201eac, 0x201ebc, 0x201ec8, 0x201ee0, 0x201ef8, 0x201f08, 0x201f1c, 0x201f34, 0x201f40, 0x201f5c, 0x201f80, 0x201f9c, 0x201fb6, 0x201fc2, 0x201fd0, 0x201fde, 0x201fec, 0x201ffa, 0x202008, 0x202016, 0x202024, 0x202032, 0x202040, 0x20206e, 0x2020c0, 0x202218, 0x202436, 0x20246c, 0x202554, 0x2025fc, 0x202674, 0x2027a0, 0x202a04, 0x202be2, 0x202bfa, 0x202c08, 0x202c16, 0x202c24, 0x202c32, 0x202c40 };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x20048c, 0x200498, 0x20049e, 0x2004b6, 0x2020d2, 0x20215c, 0x202168, 0x202180, 0x2021f0, 0x202210, 0x20223a, 0x202358, 0x20236c, 0x2023f6, 0x20241c, 0x202450, 0x202466, 0x202494, 0x202508, 0x20250e, 0x202520, 0x202524, 0x202536, 0x20253c, 0x202550, 0x20258e, 0x202594, 0x2025b0, 0x2025b6, 0x2025c8, 0x2025cc, 0x2025de, 0x2025e4, 0x2025f8, 0x202628, 0x20262e, 0x202640, 0x202644, 0x202656, 0x20265c, 0x202670, 0x20274e, 0x202780, 0x20279e, 0x2027d2, 0x20285c, 0x202876, 0x202882, 0x20297e, 0x202990, 0x2029fa, 0x202a16, 0x202aaa, 0x202ab4, 0x202ac0, 0x202b1c, 0x202b28, 0x202b62, 0x202b70, 0x202b80, 0x202b94, 0x202baa, 0x202bba, 0x202bc4, 0x202bda, 0x202bf2, 0x202c04, 0x202c12, 0x202c20, 0x202c2e, 0x202c3c, 0x202c4a, 0x202c64 };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x2004b2, 0x2004be, 0x2004c4, 0x2004c8, 0x200e1e, 0x200f6e, 0x2012e2, 0x20130a, 0x20130e, 0x201608, 0x201766, 0x20177e, 0x201ad8, 0x201af6, 0x201f50, 0x201f74, 0x201f90, 0x201fa0, 0x201fcc, 0x201fe8, 0x202004, 0x202020, 0x20203c, 0x202044, 0x202098, 0x2020e0, 0x2020ea, 0x20210e, 0x202122, 0x20214c, 0x202186, 0x2021ae, 0x2021c2, 0x2021ce, 0x2021d4, 0x2021de, 0x2021e0, 0x2021f6, 0x2021fe, 0x202250, 0x202266, 0x202298, 0x202340, 0x202354, 0x202368, 0x202372, 0x202380, 0x2023c6, 0x2023d4, 0x2023e6, 0x202402, 0x202404, 0x20240a, 0x20242a, 0x202440, 0x202456, 0x202478, 0x20247c, 0x20247e, 0x202480, 0x202482, 0x202484, 0x202496, 0x202498, 0x20249e, 0x2024a0, 0x2024f4, 0x202500, 0x202510, 0x20251c, 0x20252a, 0x202530, 0x20254c, 0x202564, 0x202578, 0x20259c, 0x2025a8, 0x2025b8, 0x2025c4, 0x2025d2, 0x2025d8, 0x2025f4, 0x20260c, 0x202614, 0x202620, 0x202630, 0x20263c, 0x20264a, 0x202650, 0x20266c, 0x202684, 0x2026a0, 0x2026f2, 0x20270a, 0x20272e, 0x20274c, 0x202770, 0x202790, 0x2027a8, 0x2027ac, 0x2027b8, 0x2027be, 0x2027ca, 0x2027ea, 0x2027f6, 0x202802, 0x202804, 0x20281c, 0x202822, 0x202838, 0x202890, 0x2028ac, 0x202978, 0x202988, 0x20298a, 0x2029c4, 0x2029cc, 0x2029d4, 0x2029dc, 0x2029e4, 0x2029ee, 0x2029f0, 0x202a08, 0x202a28, 0x202a32, 0x202a5a, 0x202a74, 0x202a9a, 0x202adc, 0x202aee, 0x202b06, 0x202b2a, 0x202b38, 0x202b7a, 0x202b8a, 0x202ba4, 0x202bb2, 0x202bca };


#endif // BT_S
                