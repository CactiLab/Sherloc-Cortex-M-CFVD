
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 1
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 5

const uint32_t icall_count = 0; 
const uint32_t ibranch_count = 1; 
const uint32_t dbranch_count = 520;
const uint32_t dcall_count = 50; 
const uint32_t ret_count = 29; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x2004a4, 0x2004a8, 0x2004ac };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x20048a, 0x2004a4, 0x2004a8, 0x201024, 0x201060 };

const uint32_t icall_list[] = {  };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x20045a, 0x200468, 0x20046c, 0x200470, 0x20047a, 0x200480, 0x2004e4, 0x2005f4, 0x200a2c, 0x200f96, 0x200fa2, 0x200fb0, 0x200fbe, 0x200fcc, 0x200fda, 0x200fe8, 0x200ff6, 0x201004, 0x201012, 0x201020, 0x20106a, 0x20107e, 0x201296, 0x2015ec, 0x201730, 0x20183c, 0x2018ac, 0x201b32, 0x201d62, 0x201db0, 0x201dec, 0x201e00, 0x201f30, 0x201f4c, 0x20203c, 0x2020ac, 0x2021c2, 0x202560, 0x202612, 0x20266a, 0x202b5c, 0x2030ca, 0x203282, 0x20335c, 0x203466, 0x203586, 0x20373c };
const uint32_t ret_list[] = { 0x200456, 0x20045e, 0x200462, 0x200490, 0x20058c, 0x200cbc, 0x201052, 0x201120, 0x20116a, 0x201488, 0x2016f8, 0x2017f8, 0x20188a, 0x201c8a, 0x201ffa, 0x202088, 0x2021a8, 0x2021b6, 0x2023f2, 0x2027b8, 0x2027c4, 0x202b90, 0x202ba2, 0x202fba, 0x202fc4, 0x202fc6, 0x203108, 0x203392, 0x2033a0 };
const uint32_t dbranch_list[] = { 0x200418, 0x20044a, 0x20048a, 0x2004a0, 0x2004a4, 0x2004a8, 0x20054a, 0x200598, 0x20059c, 0x2005d2, 0x200634, 0x200750, 0x20077e, 0x200782, 0x20078c, 0x20092a, 0x20093e, 0x200a18, 0x200a38, 0x200a6e, 0x200a72, 0x200b44, 0x200b90, 0x200ce6, 0x200ce8, 0x200cec, 0x200cf4, 0x200e8e, 0x200ea2, 0x200f82, 0x200fac, 0x200fc8, 0x200fe4, 0x201000, 0x20101c, 0x201024, 0x201060, 0x20108e, 0x20109e, 0x2010a0, 0x2010a4, 0x2010ca, 0x2010e6, 0x2010f2, 0x2010fc, 0x201108, 0x20111c, 0x20112e, 0x201138, 0x201148, 0x20116e, 0x201188, 0x20118e, 0x201208, 0x201240, 0x20127c, 0x201280, 0x201288, 0x2012ac, 0x2012be, 0x2012ca, 0x2012d4, 0x2012de, 0x2012ea, 0x201312, 0x201316, 0x20133c, 0x201350, 0x201366, 0x20138a, 0x20139e, 0x2013a0, 0x2013ca, 0x2013d0, 0x2013d4, 0x2013e6, 0x2013f2, 0x2013f8, 0x20140c, 0x201414, 0x201428, 0x20142e, 0x201432, 0x201456, 0x20146a, 0x201478, 0x201486, 0x20148a, 0x2014a6, 0x2014c2, 0x2014d2, 0x2014d4, 0x2014de, 0x2014e6, 0x2014e8, 0x201526, 0x201528, 0x20154e, 0x201568, 0x201584, 0x20158a, 0x2015b8, 0x2015ba, 0x2015cc, 0x2015fc, 0x2015fe, 0x201604, 0x20160a, 0x201642, 0x201668, 0x201682, 0x201688, 0x20168a, 0x201698, 0x20169a, 0x2016a8, 0x2016ae, 0x2016b4, 0x2016d4, 0x2016d6, 0x20173e, 0x201748, 0x20174e, 0x201752, 0x201790, 0x2017a2, 0x2017d2, 0x2017d4, 0x2017d6, 0x2017fa, 0x20180c, 0x20180e, 0x201814, 0x201816, 0x201820, 0x201828, 0x20182a, 0x201834, 0x20187a, 0x201894, 0x2018c2, 0x2018d4, 0x2018d6, 0x2018e4, 0x2018ea, 0x201928, 0x20192a, 0x201930, 0x20194e, 0x201966, 0x20196c, 0x20198a, 0x20198c, 0x2019ba, 0x2019f8, 0x2019fe, 0x201a02, 0x201a0a, 0x201a42, 0x201a7e, 0x201a82, 0x201a8a, 0x201a9a, 0x201aae, 0x201abc, 0x201ac8, 0x201ad6, 0x201ae8, 0x201b10, 0x201b3e, 0x201b52, 0x201b78, 0x201b88, 0x201b9c, 0x201ba2, 0x201bc8, 0x201bd2, 0x201bd6, 0x201be4, 0x201bf0, 0x201bfa, 0x201c0e, 0x201c16, 0x201c2a, 0x201c2c, 0x201c30, 0x201c54, 0x201c68, 0x201c7a, 0x201c84, 0x201c88, 0x201ca4, 0x201cc0, 0x201cc2, 0x201cd0, 0x201cd6, 0x201ce4, 0x201cea, 0x201d24, 0x201d2a, 0x201d4c, 0x201d4e, 0x201d6a, 0x201d88, 0x201db8, 0x201dba, 0x201dce, 0x201dfc, 0x201dfe, 0x201e06, 0x201e08, 0x201e40, 0x201e6a, 0x201e7c, 0x201e88, 0x201e8a, 0x201e98, 0x201e9a, 0x201eac, 0x201eb6, 0x201ed4, 0x201ed6, 0x201f3c, 0x201f50, 0x201f92, 0x201fa0, 0x201fd0, 0x201fd4, 0x201fd6, 0x201ff8, 0x20200c, 0x20200e, 0x202016, 0x202022, 0x202028, 0x20202a, 0x202036, 0x20204a, 0x202078, 0x202096, 0x2020c0, 0x2020d4, 0x2020d6, 0x2020e6, 0x2020e8, 0x202128, 0x20212a, 0x202132, 0x20214c, 0x20219a, 0x2021b4, 0x2021ba, 0x2021d0, 0x2021d2, 0x20221c, 0x20221e, 0x202222, 0x202226, 0x20222e, 0x20223c, 0x20224c, 0x202250, 0x20225e, 0x202266, 0x20226a, 0x202282, 0x202294, 0x2022ac, 0x2022b0, 0x2022f6, 0x202312, 0x202314, 0x202318, 0x202330, 0x202344, 0x202358, 0x20235e, 0x202366, 0x20236a, 0x20236c, 0x202370, 0x2023d4, 0x2023ec, 0x2023f6, 0x202404, 0x20240a, 0x202412, 0x202474, 0x202478, 0x20248c, 0x202496, 0x2024ba, 0x2024ce, 0x2024d2, 0x2024dc, 0x2024f8, 0x202510, 0x20251e, 0x202522, 0x202526, 0x202556, 0x202564, 0x202588, 0x2025b4, 0x2025bc, 0x2025c0, 0x202608, 0x20260c, 0x20262c, 0x202670, 0x202684, 0x20268a, 0x202694, 0x2026b0, 0x2026b6, 0x2026c2, 0x2026ca, 0x2026cc, 0x2026e0, 0x2026e2, 0x2026e4, 0x202706, 0x20272a, 0x202746, 0x202764, 0x20276a, 0x2027a0, 0x2027c0, 0x2027d2, 0x20280e, 0x202816, 0x202828, 0x20283a, 0x202854, 0x20285e, 0x20287a, 0x202880, 0x202898, 0x2028aa, 0x2028b2, 0x2028b4, 0x2028ce, 0x2028f6, 0x202908, 0x202918, 0x20291c, 0x202922, 0x20293a, 0x202952, 0x202954, 0x202956, 0x20295e, 0x202962, 0x2029a4, 0x2029a6, 0x2029c8, 0x2029d0, 0x2029d4, 0x2029f4, 0x202a28, 0x202a86, 0x202aaa, 0x202ac4, 0x202ae8, 0x202af8, 0x202b04, 0x202b08, 0x202b26, 0x202b2c, 0x202b40, 0x202b62, 0x202b6c, 0x202b7e, 0x202b9c, 0x202bae, 0x202bcc, 0x202bfe, 0x202c06, 0x202c1a, 0x202c34, 0x202c3e, 0x202c84, 0x202c86, 0x202c98, 0x202ca8, 0x202cb2, 0x202cba, 0x202cd8, 0x202cda, 0x202cec, 0x202d0e, 0x202d30, 0x202d32, 0x202d44, 0x202d4a, 0x202d7c, 0x202d7e, 0x202d82, 0x202d84, 0x202d8a, 0x202d96, 0x202da0, 0x202dc4, 0x202dca, 0x202dec, 0x202dee, 0x202df2, 0x202e12, 0x202e16, 0x202e3a, 0x202e3c, 0x202e3e, 0x202e48, 0x202e50, 0x202e68, 0x202e72, 0x202e88, 0x202e96, 0x202eb2, 0x202eb4, 0x202ec0, 0x202ec8, 0x202ece, 0x202ee0, 0x202ee2, 0x202f04, 0x202f28, 0x202f66, 0x202f68, 0x202f9a, 0x202fa2, 0x202fc2, 0x202fd0, 0x20300c, 0x203014, 0x20301c, 0x20302a, 0x203038, 0x20304c, 0x20305c, 0x203078, 0x203082, 0x2030a8, 0x2030b0, 0x2030b6, 0x2030e2, 0x2030f4, 0x20311a, 0x20311e, 0x203120, 0x203150, 0x203154, 0x203156, 0x20315c, 0x203160, 0x2031a4, 0x2031a6, 0x2031ca, 0x2031d2, 0x2031d6, 0x2031f6, 0x20322a, 0x2032a8, 0x2032c6, 0x2032ea, 0x2032fa, 0x203306, 0x20330a, 0x203324, 0x20332e, 0x203342, 0x203360, 0x20336e, 0x20337c, 0x20339e, 0x2033ac, 0x2033ce, 0x2033fc, 0x203404, 0x203418, 0x20343c, 0x20344a, 0x20345c, 0x203480, 0x203484, 0x203486, 0x20349a, 0x2034aa, 0x2034b0, 0x2034b8, 0x2034d8, 0x2034da, 0x2034ee, 0x203506, 0x203532, 0x203546, 0x203548, 0x20357e, 0x203580, 0x203594, 0x2035a2, 0x2035c6, 0x2035c8, 0x2035ee, 0x2035f0, 0x203610, 0x20361a, 0x203638, 0x20363c, 0x20363e, 0x203652, 0x20365c, 0x20366a, 0x203676, 0x2036a6, 0x2036ae, 0x2036da, 0x2036fa, 0x203702, 0x203734 };


#endif // BT_S
                