
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 0
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 0; 
const uint32_t ibranch_count = 0; 
const uint32_t dbranch_count = 56;
const uint32_t dcall_count = 46; 
const uint32_t ret_count = 10; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = {  };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x200494, 0x200498, 0x20049c };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x20048e, 0x200494, 0x200498, 0x200bc4 };

const uint32_t icall_list[] = {  };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200404, 0x20040a, 0x200418, 0x20041c, 0x200420, 0x20042a, 0x200430, 0x2004d4, 0x2004ee, 0x200504, 0x20051a, 0x200530, 0x200546, 0x200554, 0x200562, 0x200570, 0x20057e, 0x20058c, 0x20059a, 0x2005a8, 0x2005b6, 0x2005c4, 0x2005d2, 0x2005e0, 0x2005ee, 0x2005fc, 0x20060a, 0x200618, 0x200626, 0x200634, 0x200642, 0x200650, 0x20065e, 0x20067e, 0x20068a, 0x200b36, 0x200b42, 0x200b50, 0x200b5e, 0x200b6c, 0x200b7a, 0x200b88, 0x200b96, 0x200ba4, 0x200bb2, 0x200bc0 };
const uint32_t ret_list[] = { 0x20040e, 0x200412, 0x20045c, 0x200460, 0x200468, 0x200470, 0x200484, 0x20066c, 0x200b1e, 0x200bf2 };
const uint32_t dbranch_list[] = { 0x200438, 0x20043e, 0x200442, 0x200452, 0x200458, 0x200464, 0x20046c, 0x200480, 0x20048e, 0x200494, 0x200498, 0x2006be, 0x2006ca, 0x2006d2, 0x2006d4, 0x200716, 0x200720, 0x200732, 0x200746, 0x200760, 0x20076e, 0x200776, 0x200778, 0x200798, 0x2007a2, 0x2007ac, 0x2007c6, 0x2007d0, 0x20083e, 0x20086a, 0x20088a, 0x200892, 0x2008aa, 0x2008be, 0x2008c6, 0x2008f2, 0x200902, 0x200912, 0x200940, 0x20095e, 0x20099c, 0x2009b6, 0x2009f4, 0x200a24, 0x200a5c, 0x200a6e, 0x200a80, 0x200aba, 0x200acc, 0x200b02, 0x200b4c, 0x200b68, 0x200b84, 0x200ba0, 0x200bbc, 0x200bc4 };


#endif // BT_S
                