
#ifndef BT_S_H
#define BT_S_H

/********************************************
* used for run-time control flow validation *
*********************************************/

#include <stdint.h>

#define NUM_BRANCH_PAIRS 2
#define NUM_HANDLER 3
#define NUM_TASK 0
#define NUM_LOOP 4

const uint32_t icall_count = 0; 
const uint32_t ibranch_count = 2; 
const uint32_t dbranch_count = 117;
const uint32_t dcall_count = 139; 
const uint32_t ret_count = 49; 
const uint32_t handler_count = 3; 
const uint32_t PendSV = 0xdeadbeef;

const uint32_t PendSV_Entry = 0xdeadbeef;

/* branch_tab_64: <src, dst> */
const uint32_t branch_tab_32[] = { 0x432004b, 0x13e2004b };

/* exception_tab: <start_addr, end_addr> */
const uint32_t IRQ[] = { 0x200500, 0x200504, 0x200508 };
const uint32_t TASK[] = {  };
const uint32_t LOOP[] = { 0x2004fa, 0x200500, 0x200504, 0x200d90 };

const uint32_t icall_list[] = {  };
const uint32_t ibranch_list[] = {  };
const uint32_t dcall_list[] = { 0x200400, 0x200404, 0x20041a, 0x200496, 0x2004a4, 0x2004a8, 0x2004ac, 0x2004b6, 0x2004bc, 0x2004c2, 0x2004ce, 0x200540, 0x20057e, 0x20058e, 0x20059a, 0x2005ae, 0x2005b6, 0x2005c2, 0x2005d6, 0x2005de, 0x2005ea, 0x200610, 0x200618, 0x200624, 0x200634, 0x20063c, 0x200648, 0x200658, 0x200660, 0x20066c, 0x200690, 0x200698, 0x2006a4, 0x2006b4, 0x2006bc, 0x2006c8, 0x2006d8, 0x2006e0, 0x2006ec, 0x200710, 0x200718, 0x200724, 0x20073c, 0x200744, 0x200750, 0x200768, 0x200770, 0x20077c, 0x2007aa, 0x2007b2, 0x2007be, 0x2007d2, 0x2007da, 0x2007e6, 0x2007fa, 0x200802, 0x20080e, 0x20089c, 0x2008b0, 0x2008c4, 0x2008d4, 0x2008e4, 0x2008ec, 0x2008fc, 0x200908, 0x200910, 0x200946, 0x20095a, 0x20096e, 0x20097e, 0x20098e, 0x200996, 0x2009a6, 0x2009b2, 0x2009ba, 0x2009ee, 0x200a02, 0x200a16, 0x200a26, 0x200a36, 0x200a3e, 0x200a4e, 0x200a5a, 0x200a62, 0x200aa4, 0x200ab8, 0x200acc, 0x200adc, 0x200aec, 0x200af4, 0x200b04, 0x200b0c, 0x200b14, 0x200b32, 0x200b48, 0x200b5e, 0x200b6e, 0x200b7e, 0x200b86, 0x200b96, 0x200b9e, 0x200ba6, 0x200bc4, 0x200bda, 0x200bf0, 0x200c00, 0x200c10, 0x200c18, 0x200c28, 0x200c30, 0x200c38, 0x200c56, 0x200c6c, 0x200c82, 0x200c92, 0x200ca2, 0x200caa, 0x200cba, 0x200cc6, 0x200cce, 0x200d02, 0x200d0e, 0x200d1c, 0x200d2a, 0x200d38, 0x200d46, 0x200d54, 0x200d62, 0x200d70, 0x200d7e, 0x200d8c, 0x200dba, 0x200e0c, 0x200f64, 0x20116a, 0x2011a0, 0x20133c, 0x2015a0, 0x20177e };
const uint32_t ret_list[] = { 0x200474, 0x200492, 0x20049a, 0x20049e, 0x2004c8, 0x2004d4, 0x2004da, 0x2004f2, 0x20083c, 0x200cea, 0x200e1e, 0x200ea8, 0x200eb4, 0x200ecc, 0x200f3c, 0x200f5c, 0x20108c, 0x2010a0, 0x20112a, 0x201150, 0x201184, 0x20119a, 0x2011c8, 0x2012ea, 0x20131c, 0x20133a, 0x20136e, 0x2013f8, 0x201412, 0x20141e, 0x20151a, 0x20152c, 0x201596, 0x2015b2, 0x201646, 0x201650, 0x20165c, 0x2016b8, 0x2016c4, 0x2016fe, 0x20170c, 0x20171c, 0x201730, 0x201746, 0x201756, 0x201760, 0x201776, 0x20178e, 0x2017ac };
const uint32_t dbranch_list[] = { 0x200418, 0x200456, 0x200462, 0x200466, 0x20046e, 0x200472, 0x200486, 0x2004ee, 0x2004fa, 0x200500, 0x200504, 0x20081c, 0x200826, 0x200830, 0x200848, 0x200854, 0x20087a, 0x200926, 0x2009d0, 0x200a72, 0x200cdc, 0x200ce0, 0x200d18, 0x200d34, 0x200d50, 0x200d6c, 0x200d88, 0x200d90, 0x200de4, 0x200e2c, 0x200e36, 0x200e5a, 0x200e6e, 0x200e98, 0x200ed2, 0x200efa, 0x200f0e, 0x200f1a, 0x200f20, 0x200f2a, 0x200f2c, 0x200f42, 0x200f4a, 0x200f84, 0x200f9a, 0x200fcc, 0x201074, 0x201088, 0x20109c, 0x2010a6, 0x2010b4, 0x2010fa, 0x201108, 0x20111a, 0x201136, 0x201138, 0x20113e, 0x20115e, 0x201174, 0x20118a, 0x2011ac, 0x2011b0, 0x2011b2, 0x2011b4, 0x2011b6, 0x2011b8, 0x2011ca, 0x2011cc, 0x2011d2, 0x2011d4, 0x20123c, 0x20128e, 0x2012a6, 0x2012ca, 0x2012e8, 0x20130c, 0x20132c, 0x201344, 0x201348, 0x201354, 0x20135a, 0x201366, 0x201386, 0x201392, 0x20139e, 0x2013a0, 0x2013b8, 0x2013be, 0x2013d4, 0x20142c, 0x201448, 0x201514, 0x201524, 0x201526, 0x201560, 0x201568, 0x201570, 0x201578, 0x201580, 0x20158a, 0x20158c, 0x2015a4, 0x2015c4, 0x2015ce, 0x2015f6, 0x201610, 0x201636, 0x201678, 0x20168a, 0x2016a2, 0x2016c6, 0x2016d4, 0x201716, 0x201726, 0x201740, 0x20174e, 0x201766 };


#endif // BT_S
                